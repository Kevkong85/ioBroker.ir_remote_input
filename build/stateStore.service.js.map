{
  "version": 3,
  "sources": ["../src/stateStore.service.ts"],
  "sourcesContent": ["import { AdapterInstance } from '@iobroker/adapter-core';\nimport { concatMap, of, Subject, takeUntil } from 'rxjs';\n\nconst STATE_KEYPRESS = 'keyPress';\nconst STATE_KEYLONGPRESS = 'keyLongPress';\n\nexport interface IStore {\n    setKeyPress(key: string): void;\n    setKeyLongPress(key: string): void;\n}\n\nexport class StateStoreService implements IStore {\n\n    private _writeBuffer$ = new Subject<{ state: string, key: string }>();\n    private _unsubscribe$ = new Subject<void>();\n\n    constructor(private _adapterInstance: AdapterInstance ) {}\n\n    public async init(): Promise<void> {\n        await this._adapterInstance.setObjectNotExistsAsync(STATE_KEYPRESS, {\n            type: 'state',\n            common: {\n                name: STATE_KEYPRESS,\n                type: 'string',\n                role: 'state',\n                read: true,\n                write: true,\n            },\n            native: {},\n        });\n\n        await this._adapterInstance.setObjectNotExistsAsync(STATE_KEYLONGPRESS, {\n            type: 'state',\n            common: {\n                name: STATE_KEYLONGPRESS,\n                type: 'string',\n                role: 'state',\n                read: true,\n                write: true,\n            },\n            native: {},\n        });\n\n        this._writeBuffer$.pipe(\n            concatMap(value => {\n                return this._write(value.state, value.key);\n            })\n        ).pipe(concatMap(value => {\n            return of(value);\n        })).subscribe(value => this._adapterInstance.log.info('SUB CALLED ' + JSON.stringify(value)));\n    }\n\n    public setKeyPress(key: string): void {\n        this._writeBuffer$.next({state: STATE_KEYPRESS, key: key});\n        // return new Promise((resolve, reject) => {\n        //     this._adapterInstance.setStateChanged(STATE_KEYPRESS, { val: key, ack: true }, (err) => {\n        //         this._adapterInstance.log.info('CALLBACK HAPPENED');\n        //         err ? reject() : resolve();\n        //     });\n        // });\n        // this._adapterInstance.setStateChangedAsync(STATE_KEYPRESS, { val: key, ack: true });\n    }\n\n    public setKeyLongPress(key: string): void {\n        this._writeBuffer$.next({state: STATE_KEYLONGPRESS, key: key});\n        // this._adapterInstance.setStateChangedAsync(STATE_KEYLONGPRESS, { val: key, ack: true });\n    }\n\n    public destroy(): void {\n        this._unsubscribe$.next();\n        this._unsubscribe$.complete();\n    }\n\n    private async _write(state: string, key: string): Promise<{state: string, key: string}> {\n        return new Promise((resolve, reject) => {\n            this._adapterInstance.setStateChanged(state, { val: key, ack: true }, (err) => {\n                this._adapterInstance.log.info('CALLBACK HAPPENED');\n                err ? reject(null) : resolve({state: state, key: key});\n            });\n        });\n    }\n}"],
  "mappings": ";;;;;;;;;;;;;;;;;AAAA;AAAA;AAAA;AAAA;AAAA;AACA,kBAAkD;AAElD,MAAM,iBAAiB;AACvB,MAAM,qBAAqB;AAOpB,MAAM,kBAAoC;AAAA,EAK7C,YAAoB,kBAAoC;AAApC;AAHZ,yBAAgB,IAAI,oBAAwC;AAC5D,yBAAgB,IAAI,oBAAc;AAAA,EAEe;AAAA,QAE5C,OAAsB;AAC/B,UAAM,KAAK,iBAAiB,wBAAwB,gBAAgB;AAAA,MAChE,MAAM;AAAA,MACN,QAAQ;AAAA,QACJ,MAAM;AAAA,QACN,MAAM;AAAA,QACN,MAAM;AAAA,QACN,MAAM;AAAA,QACN,OAAO;AAAA,MACX;AAAA,MACA,QAAQ,CAAC;AAAA,IACb,CAAC;AAED,UAAM,KAAK,iBAAiB,wBAAwB,oBAAoB;AAAA,MACpE,MAAM;AAAA,MACN,QAAQ;AAAA,QACJ,MAAM;AAAA,QACN,MAAM;AAAA,QACN,MAAM;AAAA,QACN,MAAM;AAAA,QACN,OAAO;AAAA,MACX;AAAA,MACA,QAAQ,CAAC;AAAA,IACb,CAAC;AAED,SAAK,cAAc,KACf,2BAAU,WAAS;AACf,aAAO,KAAK,OAAO,MAAM,OAAO,MAAM,GAAG;AAAA,IAC7C,CAAC,CACL,EAAE,KAAK,2BAAU,WAAS;AACtB,aAAO,oBAAG,KAAK;AAAA,IACnB,CAAC,CAAC,EAAE,UAAU,WAAS,KAAK,iBAAiB,IAAI,KAAK,gBAAgB,KAAK,UAAU,KAAK,CAAC,CAAC;AAAA,EAChG;AAAA,EAEO,YAAY,KAAmB;AAClC,SAAK,cAAc,KAAK,EAAC,OAAO,gBAAgB,IAAQ,CAAC;AAAA,EAQ7D;AAAA,EAEO,gBAAgB,KAAmB;AACtC,SAAK,cAAc,KAAK,EAAC,OAAO,oBAAoB,IAAQ,CAAC;AAAA,EAEjE;AAAA,EAEO,UAAgB;AACnB,SAAK,cAAc,KAAK;AACxB,SAAK,cAAc,SAAS;AAAA,EAChC;AAAA,QAEc,OAAO,OAAe,KAAoD;AACpF,WAAO,IAAI,QAAQ,CAAC,SAAS,WAAW;AACpC,WAAK,iBAAiB,gBAAgB,OAAO,EAAE,KAAK,KAAK,KAAK,KAAK,GAAG,CAAC,QAAQ;AAC3E,aAAK,iBAAiB,IAAI,KAAK,mBAAmB;AAClD,cAAM,OAAO,IAAI,IAAI,QAAQ,EAAC,OAAc,IAAQ,CAAC;AAAA,MACzD,CAAC;AAAA,IACL,CAAC;AAAA,EACL;AACJ;",
  "names": []
}
