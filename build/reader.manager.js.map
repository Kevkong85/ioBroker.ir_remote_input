{
  "version": 3,
  "sources": ["../src/reader.manager.ts"],
  "sourcesContent": ["import { AdapterInstance } from '@iobroker/adapter-core';\nimport EvdevReader, { Evdev } from 'evdev';\nimport { debounceTime, filter, finalize, first, map, merge, of, race, repeat, Subject, switchMap, take, takeUntil, takeWhile, tap, timer } from 'rxjs';\nimport { IStore } from './stateStore.service';\n\nexport class ReaderManger {\n    private _reader: EvdevReader;\n    private _keyEvent$ = new Subject<Evdev.Event>();\n    private _unsubscribe$ = new Subject<void>();\n\n    constructor(\n        private _adapterInstance: AdapterInstance,\n        private _store: IStore\n    ) {\n        this._reader = new EvdevReader({ raw: false });\n\n        this._keyEvent$.pipe(\n            takeUntil(this._unsubscribe$)\n        ).subscribe(data => {\n            this._adapterInstance.log.info('KEY EVENT: ' + JSON.stringify(data));\n        });\n\n        // this._keyEvent$.pipe(\n        //     takeUntil(this._unsubscribe$)\n        // ).subscribe(data => {\n        //     this._store.setKeyPress(data.value === 0 ? '' : data.code);\n        // });\n\n        // race([\n        //     this._keyEvent$.pipe(\n        //         filter(data => data.value === 1),\n        //         debounceTime(500),\n        //         repeat(),\n        //         takeUntil(this._keyEvent$.pipe(filter(data => data.value === 0)))\n        //     ),\n        //     this._keyEvent$.pipe(\n        //         filter(data => data.value == 2),\n        //         repeat(),\n        //         takeUntil(this._keyEvent$.pipe(filter(data => data.value === 0)))\n        //     ),\n        // ]).pipe(\n        //     repeat(),\n        //     takeUntil(this._unsubscribe$),\n        //     finalize(() => this._clearKeyEvents())\n        // ).subscribe(data => {\n        //     this._adapterInstance.log.info('race finished: ' + JSON.stringify(data));\n        //     if(data.value === 1) {\n        //         this._store.setKeyPress(data.code);\n        //     }\n\n        //     if(data.value === 2) {\n        //         this._store.setKeyLongPress(data.code);\n        //     }\n        // });\n\n        this._keyEvent$.pipe(\n            filter(data => data.value === 1),\n            switchMap(startEvent => race([\n                this._keyEvent$.pipe(tap(_ => this._adapterInstance.log.info('first race member')), filter(data => data.value === 0), map(_ => startEvent), first()),\n                this._keyEvent$.pipe(tap(_ => this._adapterInstance.log.info('second race member')), takeWhile(data => data.value === 2))\n            ]).pipe(finalize(() => { this._adapterInstance.log.info('FINALIZE'); this._clearKeyEvents();}))),\n            takeUntil(this._unsubscribe$),\n            finalize(() => this._clearKeyEvents())\n        ).subscribe(data => { this._adapterInstance.log.info('SUBSCRIPTION'); this._setKeyEvent(data); });\n\n        // this._keyEvent$.pipe(\n        //     filter(data => data.value === 0),\n        //     takeUntil(this._unsubscribe$)\n        // ).subscribe(_ => this._clearKeyEvents());\n    }\n\n    public init(devicePath: string): void {\n\n        this._reader.on('EV_KEY', data => this._keyEvent$.next(data));\n\n        this._reader.on('error', err => {\n            this._adapterInstance.log.error('reader error : ' + err);\n        });\n\n        this._reader.search('/dev/input/by-path', devicePath, (err, devicePaths) => {\n            if(err) {\n                this._adapterInstance.log.warn('No input device found for given config, run ls /dev/input/by-path/ to identify your device');\n                return;\n            }\n\n            this._adapterInstance.log.info('Devices found: ' + JSON.stringify(devicePaths));\n            if(devicePaths.length > 1) {\n                this._adapterInstance.log.warn('More than one possible input device found, please configure a more precise path');\n            }\n\n            const device = this._reader.open(devicePaths[0]);\n            device.on('open', () => {\n                this._adapterInstance.log.info('Device successfully opened');\n            });\n        });\n    }\n\n    public destroy(): void {\n        this._reader.close();\n        this._unsubscribe$.next();\n        this._unsubscribe$.complete();\n    }\n\n    private _clearKeyEvents(): void {\n        this._adapterInstance.log.info('_clearKeyEvents called');\n        this._store.setKeyPress('');\n        this._store.setKeyLongPress('');\n    }\n\n    private _setKeyEvent(data: Evdev.Event): void {\n        this._adapterInstance.log.info('setting key event: ' + JSON.stringify(data));\n        if(data.value === 1) {\n            this._store.setKeyPress(data.code);\n        }\n\n        if(data.value === 2) {\n            this._store.setKeyLongPress(data.code);\n        }\n    }\n}"],
  "mappings": ";;;;;;;;;;;;;;;;;;;;AAAA;AAAA;AAAA;AAAA;AAAA;AACA,mBAAmC;AACnC,kBAAgJ;AAGzI,MAAM,aAAa;AAAA,EAKtB,YACY,kBACA,QACV;AAFU;AACA;AALJ,sBAAa,IAAI,oBAAqB;AACtC,yBAAgB,IAAI,oBAAc;AAMtC,SAAK,UAAU,IAAI,qBAAY,EAAE,KAAK,MAAM,CAAC;AAE7C,SAAK,WAAW,KACZ,2BAAU,KAAK,aAAa,CAChC,EAAE,UAAU,UAAQ;AAChB,WAAK,iBAAiB,IAAI,KAAK,gBAAgB,KAAK,UAAU,IAAI,CAAC;AAAA,IACvE,CAAC;AAmCD,SAAK,WAAW,KACZ,wBAAO,UAAQ,KAAK,UAAU,CAAC,GAC/B,2BAAU,gBAAc,sBAAK;AAAA,MACzB,KAAK,WAAW,KAAK,qBAAI,OAAK,KAAK,iBAAiB,IAAI,KAAK,mBAAmB,CAAC,GAAG,wBAAO,UAAQ,KAAK,UAAU,CAAC,GAAG,qBAAI,OAAK,UAAU,GAAG,uBAAM,CAAC;AAAA,MACnJ,KAAK,WAAW,KAAK,qBAAI,OAAK,KAAK,iBAAiB,IAAI,KAAK,oBAAoB,CAAC,GAAG,2BAAU,UAAQ,KAAK,UAAU,CAAC,CAAC;AAAA,IAC5H,CAAC,EAAE,KAAK,0BAAS,MAAM;AAAE,WAAK,iBAAiB,IAAI,KAAK,UAAU;AAAG,WAAK,gBAAgB;AAAA,IAAE,CAAC,CAAC,CAAC,GAC/F,2BAAU,KAAK,aAAa,GAC5B,0BAAS,MAAM,KAAK,gBAAgB,CAAC,CACzC,EAAE,UAAU,UAAQ;AAAE,WAAK,iBAAiB,IAAI,KAAK,cAAc;AAAG,WAAK,aAAa,IAAI;AAAA,IAAG,CAAC;AAAA,EAMpG;AAAA,EAEO,KAAK,YAA0B;AAElC,SAAK,QAAQ,GAAG,UAAU,UAAQ,KAAK,WAAW,KAAK,IAAI,CAAC;AAE5D,SAAK,QAAQ,GAAG,SAAS,SAAO;AAC5B,WAAK,iBAAiB,IAAI,MAAM,oBAAoB,GAAG;AAAA,IAC3D,CAAC;AAED,SAAK,QAAQ,OAAO,sBAAsB,YAAY,CAAC,KAAK,gBAAgB;AACxE,UAAG,KAAK;AACJ,aAAK,iBAAiB,IAAI,KAAK,4FAA4F;AAC3H;AAAA,MACJ;AAEA,WAAK,iBAAiB,IAAI,KAAK,oBAAoB,KAAK,UAAU,WAAW,CAAC;AAC9E,UAAG,YAAY,SAAS,GAAG;AACvB,aAAK,iBAAiB,IAAI,KAAK,iFAAiF;AAAA,MACpH;AAEA,YAAM,SAAS,KAAK,QAAQ,KAAK,YAAY,EAAE;AAC/C,aAAO,GAAG,QAAQ,MAAM;AACpB,aAAK,iBAAiB,IAAI,KAAK,4BAA4B;AAAA,MAC/D,CAAC;AAAA,IACL,CAAC;AAAA,EACL;AAAA,EAEO,UAAgB;AACnB,SAAK,QAAQ,MAAM;AACnB,SAAK,cAAc,KAAK;AACxB,SAAK,cAAc,SAAS;AAAA,EAChC;AAAA,EAEQ,kBAAwB;AAC5B,SAAK,iBAAiB,IAAI,KAAK,wBAAwB;AACvD,SAAK,OAAO,YAAY,EAAE;AAC1B,SAAK,OAAO,gBAAgB,EAAE;AAAA,EAClC;AAAA,EAEQ,aAAa,MAAyB;AAC1C,SAAK,iBAAiB,IAAI,KAAK,wBAAwB,KAAK,UAAU,IAAI,CAAC;AAC3E,QAAG,KAAK,UAAU,GAAG;AACjB,WAAK,OAAO,YAAY,KAAK,IAAI;AAAA,IACrC;AAEA,QAAG,KAAK,UAAU,GAAG;AACjB,WAAK,OAAO,gBAAgB,KAAK,IAAI;AAAA,IACzC;AAAA,EACJ;AACJ;",
  "names": []
}
